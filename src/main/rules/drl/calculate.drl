package MTPLTariffRules

import hu.dbx.screek.model.facts.*;
import hu.dbx.screek.model.*;
import java.util.Date;
import org.joda.time.DateTime;
import java.util.ArrayList;
import java.math.BigDecimal;

function double round(double val, int precision) {
	BigDecimal temp = new BigDecimal(val).setScale(precision, BigDecimal.ROUND_HALF_UP);
	Double doublePrice= new Double(temp.doubleValue());
	
	return temp.doubleValue();
}

function int yearsBetween(Date s, Date e) {
	return Math.abs(new DateTime(s).getYear() - new DateTime(e).getYear());  
}

function boolean isEquals(DateTime s, DateTime e) {
	DateTime temp = s.withDate(s.getYear(), s.getMonthOfYear(), s.getDayOfMonth());

	return temp.isEqual(e);
}

function boolean firstIsAfter(DateTime s, DateTime e) {
	DateTime temp = s.withDate(s.getYear(), s.getMonthOfYear(), s.getDayOfMonth());
	
	return temp.isAfter(e);    
}

/*****************************************************************************
							  Alaptarifa beállítás 
*****************************************************************************/
rule "alaptarifa beallitas"
	agenda-group "calculate"
	when
		$q : Quote()
		$v : Vehicle()
		$b : BaseTariffDef( durationType == $q.durationType &&
							vehicleType == $v.typeCode &&
							$v.typeCode != 4 && 
							$v.typeCode != 3 && 
						    $v.typeCode != 2 )
		eval ( $b.isValid( $q.getStartDate() ) )
						
	then
		$q.getResult().setBaseTariff( $b.getValue() );
end

rule "alaptarifa beallitas (motorkerekpar)"
	agenda-group "calculate"
	when
		$q : Quote()
		$v : Vehicle( typeCode == 3 )
		$b : MotorBikeBaseTariffDef( durationType == $q.durationType &&
									 cubicCapacityMin <= $v.cubicCapacity &&
									 cubicCapacityMax >= $v.cubicCapacity )
		eval ( $b.isValid( $q.getStartDate() ) )
						
	then
		$q.getResult().setBaseTariff( $b.getValue() );
end

rule "alaptarifa beallitas (autobusz)"
	agenda-group "calculate"
	when
		$q : Quote()
		$v : Vehicle( typeCode == 4 )
		$b : AutoBusBaseTariffDef( durationType == $q.durationType &&
								   seatingCapacityMin <= $v.seatingCapacity &&
								   seatingCapacityMax >= $v.seatingCapacity )
		eval ( $b.isValid( $q.getStartDate() ) )
						
	then
		$q.getResult().setBaseTariff( $b.getValue() );
end

rule "alaptarifa beallitas (tehergepjarmu)"
	agenda-group "calculate"
	when
		$q : Quote()
		$p : Partner()
		$v : Vehicle( typeCode == 2 )
		$b : TruckBaseTariffDef( durationType == $q.durationType &&
								 genderCode == $p.genderCode &&
								 carryingCapacityMin <= $v.carryingCapacity &&
								 carryingCapacityMax >= $v.carryingCapacity )
		eval ( ( !"JOGI_SZEMELY".equals( $p.getGenderCode() ) &&
		 	    $b.getPartnerAgeMin() <= yearsBetween( $p.getDateOfBirth(), $q.getStartDate() ) &&
			    $b.getPartnerAgeMax() >= yearsBetween( $p.getDateOfBirth(), $q.getStartDate() ) ) ||
			   ( "JOGI_SZEMELY".equals( $p.getGenderCode() ) ) )
		eval ( $b.isValid( $q.getStartDate() ) )
						
	then
		$q.getResult().setBaseTariff( $b.getValue() );
end

/*****************************************************************************
				 Díjszámítási paraméterek beállítása 
*****************************************************************************/
rule "alaptarifa modositas a gyartmany-teljesitmeny-hengerurtartalom alapjan"
	agenda-group "calculate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == 1 )
		$m : MakeDef( make == $v.make )
		$p : PowerModFactorDef( makeCode == $m.makeCode )
		$c : CubicCapacityModFactorDef( )
		eval( $p.getPowerMin() <= $v.getMaximumNettoPower() &&
			  $p.getPowerMax() >= $v.getMaximumNettoPower() &&
			  $p.isValid( $q.getStartDate() ) )
		eval( $c.getCapacityMin() <= $v.getCubicCapacity() &&
			  $c.getCapacityMax() >= $v.getCubicCapacity() &&
			  $c.isValid( $q.getStartDate() ) ) 
				
	then
		int baseTariff = $q.getResult().getBaseTariff();
		baseTariff = (int)Math.round(baseTariff * $p.getValue() * $c.getValue() );
		$q.getResult().setBaseTariff( baseTariff );
end

rule "teruleti besorolas-korcsoport szorzo (termeszetes szemely)"
	agenda-group "calculate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == 1 )		
		$p : Partner( genderCode != "JOGI_SZEMELY" )
		$a : AreaDef( postCode == $p.postCode )
		$mf: PartnerAgeModFactorDef( areaCode == $a.areaCode )
		eval ( $a.isValid( $q.getStartDate() ) &&
		 	   $mf.isValid( $q.getStartDate() ) &&
		 	   $mf.getAgeMin() <= yearsBetween($p.getDateOfBirth(), $q.getStartDate()) &&
		 	   $mf.getAgeMax() >= yearsBetween($p.getDateOfBirth(), $q.getStartDate()) )
				
	then
		insert(new ModFactor("AREA-AGEGROUP", $mf.getValue(), $p, "MULTIPLIER"));
end

rule "teruleti besorolas szorzo (jogi szemely)"
	agenda-group "calculate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == 1 )
		$p : Partner( genderCode == "JOGI_SZEMELY")
		$a : AreaDef( postCode == $p.postCode )
		$mf: LegalModFactorDef( areaCode == $a.areaCode )
		eval ( $a.isValid( $q.getStartDate() ) &&
		 	   $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("AREA", $mf.getValue(), $p, "MULTIPLIER"));
end

rule "jarmu eletkor szorzo"
	agenda-group "calculate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == 1 )
		$mf: VehicleAgeModFactorDef()
		eval ( $mf.isValid( $q.getStartDate() ) &&
			   $mf.getAgeMin() <= yearsBetween($v.getDateOfFirstPutIntoTraffic(), $q.getStartDate()) &&
		 	   $mf.getAgeMax() >= yearsBetween($v.getDateOfFirstPutIntoTraffic(), $q.getStartDate()) )
				
	then
		insert(new ModFactor("VEHICLE-AGE", $mf.getValue(), $v, "MULTIPLIER"));
end

rule "vezetoi engedely szorzo"
	agenda-group "calculate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == 1)
		$p : Partner()
		$mf: DrivingLicenseModFactorDef()
		eval ( $mf.isValid( $q.getStartDate() ) &&
			   $mf.getSinceMin() <= yearsBetween(new DateTime($p.getYearOfDrivingLicense(),1,1,0,0,0,0).toDate(), $q.getStartDate()) &&
		 	   $mf.getSinceMax() >= yearsBetween(new DateTime($p.getYearOfDrivingLicense(),1,1,0,0,0,0).toDate(), $q.getStartDate()) )
				
	then
		insert(new ModFactor("DRIVING-LICENSE", $mf.getValue(), $p, "MULTIPLIER"));
end

rule "dijfizetes gyakorisaga szorzo"
	agenda-group "calculate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$mf: PaymentFreqModFactorDef( frequencyCode == $q.paymentFrequency )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("PAYMENT-FREQUENCY", $mf.getValue(), $q, "MULTIPLIER"));
end

/*****************************************************************************
				 Kedvezmények, pótdíjak számolása 
*****************************************************************************/
rule "uzemeltetesi jelleg potdij"
	agenda-group "calculate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v: Vehicle( operationalModality != "NORMAL" )
		$mf: ModFactorDef( modfactorType == 9 )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("OPERATIONAL-MODALITY", $mf.getValue(), $v, "SURCHARGE"));
end

rule "casco egyuttkotes kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( takeOutWithCasco == true )
		$mf: ModFactorDef( modfactorType == 1 )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("TAKE-OUT-WITH-CASCO", $mf.getValue(), $q, "DISCOUNT"));
end

rule "banki lehivasos fizetes kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( groupedCollection == true )
		$mf: ModFactorDef( modfactorType == 2 )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("GROUPED-COLLECTION", $mf.getValue(), $q, "DISCOUNT"));
end

rule "online 8 kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( online == true && eval ( isEquals(new DateTime(startDate), new DateTime(2010, 1, 1, 0, 0, 0, 0) ) ) )
		$mf: ModFactorDef( modfactorType == 4 )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("ONLINE", $mf.getValue(), $q, "DISCOUNT"));
end

rule "online 4 kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( online == true && eval ( firstIsAfter(new DateTime(startDate), new DateTime(2010, 1, 1, 0, 0, 0, 0) ) ) )
		$mf: ModFactorDef( modfactorType == 3 )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("ONLINE", $mf.getValue(), $q, "DISCOUNT"));
end

rule "gyermek kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( childPreference == true )
		$mf: ModFactorDef( modfactorType == 5 )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("CHILD-PREFERENCE", $mf.getValue(), $q, "DISCOUNT"));
end

rule "mkb partner kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( mkbPartner == true )
		$mf: ModFactorDef( modfactorType == 6 )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("MKB-PARTNER", $mf.getValue(), $q, "DISCOUNT"));
end

rule "email kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( emailGranted == true )
		$mf: ModFactorDef( modfactorType == 7 )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("EMAIL", $mf.getValue(), $q, "DISCOUNT"));
end

rule "extra karmentessegi kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( extraDamageExemption == true )
		$mf: ModFactorDef( modfactorType == 8 )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("EXTRA-DAMAGE-EXEMPTION", $mf.getValue(), $q, "DISCOUNT"));
end


/*****************************************************************************
							  Tarifálás 
*****************************************************************************/
rule "quote szorzok"
	agenda-group "calculate"
	salience -30
	
    when
        $q : Quote()
        $modfactors : ArrayList()
                   		from collect( ModFactor( quote == $q ) )

    then
    	for (Object mf : $modfactors){
    		$q.addModFactor((ModFactor) mf);
    	}
end

rule "jarmu szorzok"
	agenda-group "calculate"
	salience -30
	
    when
        $q : Quote()
        $v : Vehicle( quote == $q )
        $modfactors : ArrayList()
                   		from collect( ModFactor( vehicle == $v ) )

    then
    	for (Object mf : $modfactors){
    		$v.addModFactor((ModFactor) mf);
    	}
end

rule "partner szorzok"
	agenda-group "calculate"
	salience -30
	
    when
        $q : Quote()
        $p : Partner( quote == $q )
        $modfactors : ArrayList()
                   		from collect( ModFactor( partner == $p ) )

    then
    	for (Object mf : $modfactors){
    		$p.addModFactor((ModFactor) mf);
    	}
end

rule "eves premium szamolasa"
	agenda-group "calculate"
	salience -50
	when
		$q : Quote()
		$v : Vehicle()
		$p : Partner()
        $quotemf : Double()
	        			from accumulate ( $mf : ModFactor( quote == $q, $val : value, discount == false, surcharge == false ),
	                          init(double m = 1.0;),
	                          action(
	                          	m *= $val;
	                          ),
	                          result(m) 
	                        )
        $partnermf : Double()
	        			from accumulate ( $mf : ModFactor( partner == $p, $val : value, discount == false, surcharge == false ),
	                          init(double m = 1.0;),
	                          action(
	                          	m *= $val;
	                          ),
	                          result(m) 
	                        )
        $vehiclemf : Double()
	        			from accumulate ( $mf : ModFactor( vehicle == $v, $val : value, discount == false, surcharge == false ),
	                          init(double m = 1.0;),
	                          action(
	                          	m *= $val;
	                          ),
	                          result(m) 
	                        )    
		$discounts : Double()
	        			from accumulate ( $mf : ModFactor( $val : value, discount == true ),
	                       	init(double m = 1.0;),
	                       	action(
	                       		m *= $val;
	                       	),
	                       	result(m) 
	                   )    
	   	$surcharges : Double()
	        			from accumulate ( $mf : ModFactor( $val : value, surcharge == true ),
	                       	init(double m = 1.0;),
	                       	action(
	                       		m *= $val;
	                       	),
	                       	result(m) 
	                   )     	 	                              	                                  	                                           					
	then
		int baseTariff = $q.getResult().getBaseTariff();
		int precision = 5;
		
		if ( $discounts < 0.6 ) {			
			insert( Message.create("26", String.valueOf( round( (1 - $discounts) * 100, precision ) ) ) );
			$discounts = 0.6;
		}
		double mult = round($quotemf * $partnermf * $vehiclemf * $discounts * $surcharges, precision);
		int premium = (int)Math.round(baseTariff * mult); 
		
		$q.getResult().setYearlyPremium( premium );
		$q.getResult().setOtherMultiplier( round($quotemf * $partnermf * $vehiclemf, precision) );
		$q.getResult().setDiscountMultiplier( round($discounts, precision) );
		$q.getResult().setSurchargeMultiplier( round($surcharges, precision) );
		$q.getResult().setTotalMultiplier( mult );
		
end


