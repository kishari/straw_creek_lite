package MTPLTariffRules

import hu.dbx.screek.model.facts.*;
import hu.dbx.screek.model.*;
import java.util.Date;
import org.joda.time.DateTime;
import org.joda.time.Days;
import java.util.ArrayList;
import java.math.BigDecimal;

function boolean isNullInt(Integer i) {
		return (i == null || i == 0);
}

function double round(double val, int precision) {
	BigDecimal temp = new BigDecimal(val).setScale(precision, BigDecimal.ROUND_HALF_UP);
	
	return temp.doubleValue();
}

function boolean isBetween(Integer lowerBound, Integer upperBound, Integer value) {
	if ( value == null ) {
		return false;
	} 
	else {
		return (lowerBound <= value && upperBound >= value);
	}
}

function int yearsBetween(Date s, Date e) {
	return Math.abs(new DateTime(s).getYear() - new DateTime(e).getYear());  
}

function int daysBetween(Date s, Date e) {
	return Days.daysBetween(new DateTime(s), new DateTime(e)).getDays() + 1;
}

function boolean isEquals(DateTime s, DateTime e) {
	DateTime temp = s.withDate(s.getYear(), s.getMonthOfYear(), s.getDayOfMonth());

	return temp.isEqual(e);
}

function boolean firstIsAfter(DateTime s, DateTime e) {
	DateTime temp = s.withDate(s.getYear(), s.getMonthOfYear(), s.getDayOfMonth());
	
	return temp.isAfter(e);    
}

/*****************************************************************************
							  Alaptarifa beállítás 
*****************************************************************************/
rule "alaptarifa beallitas"
	agenda-group "calculate"
	when
		$q : Quote()
		$v : Vehicle()
		$b : BaseTariffDef( durationType == $q.durationType,
							vehicleType == $v.typeCode )
		eval ( $b.isValid( $q.getStartDate() ) )
		eval ( ($q.getDurationType() == Constants.DT_HATAROZATLAN && 
			   	$v.getTypeCode() != Constants.TC_TEHERGEPJARMU && 
		   	   	$v.getTypeCode() != Constants.TC_MOTORKEREKPAR && 
		   	   	$v.getTypeCode() != Constants.TC_AUTOBUSZ) ||
		   	   	($q.getDurationType() == Constants.DT_HATAROZOTT) ) 
	then		
		$q.getResult().setBaseTariff( $b.getValue() );
		
end

rule "alaptarifa beallitas (motorkerekpar)"
	agenda-group "calculate"
	when
		$q : Quote()
		$v : Vehicle( typeCode == Constants.TC_MOTORKEREKPAR )
		$b : MotorBikeBaseTariffDef( durationType == $q.durationType ) 
		eval ( isBetween($b.getCubicCapacityMin(), $b.getCubicCapacityMax(), $v.getCubicCapacity() ) )
		eval ( $b.isValid( $q.getStartDate() ) )
						
	then
		$q.getResult().setBaseTariff( $b.getValue() );
end

rule "alaptarifa beallitas (autobusz)"
	agenda-group "calculate"
	when
		$q : Quote()
		$v : Vehicle( typeCode == Constants.TC_AUTOBUSZ )
		$b : AutoBusBaseTariffDef( durationType == $q.durationType )
		eval ( isBetween($b.getSeatingCapacityMin(), $b.getSeatingCapacityMax(), $v.getSeatingCapacity() ) )
		eval ( $b.isValid( $q.getStartDate() ) )
						
	then
		$q.getResult().setBaseTariff( $b.getValue() );
end

rule "alaptarifa beallitas (tehergepjarmu)"
	agenda-group "calculate"
	when
		$q : Quote()
		$p : Partner()
		$v : Vehicle( typeCode == Constants.TC_TEHERGEPJARMU )
		$b : TruckBaseTariffDef( durationType == $q.durationType,
								 genderCode == $p.genderCode )
		eval ( isBetween( $b.getCarryingCapacityMin(), 
						  $b.getCarryingCapacityMax(), 
						  $v.getCarryingCapacity() ) )
		eval ( ( $p.getGenderCode() != Constants.JOGI_SZEMELY &&
				 isBetween( $b.getPartnerAgeMin(), 
				 			$b.getPartnerAgeMax(), 
				 			yearsBetween( $p.getDateOfBirth(), $q.getStartDate() ) ) ) || 
			   ( $p.getGenderCode() == Constants.JOGI_SZEMELY ) )
		eval ( $b.isValid( $q.getStartDate() ) )
						
	then
		$q.getResult().setBaseTariff( $b.getValue() );
end

/*****************************************************************************
				 Díjszámítási paraméterek beállítása 
*****************************************************************************/
rule "alaptarifa modositas a gyartmany-teljesitmeny-hengerurtartalom alapjan"
	agenda-group "calculate"
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU )
		$m : MakeDef( make == $v.make )
		$p : PowerModFactorDef( makeCode == $m.makeCode )
		$c : CubicCapacityModFactorDef( )
		eval ( isBetween( $p.getPowerMin(), 
						  $p.getPowerMax(), 
						  $v.getMaximumNettoPower() ) )
		eval ( isBetween( $c.getCapacityMin(), 
						  $c.getCapacityMax(), 
						  $v.getCubicCapacity() ) )
		eval ( $p.isValid( $q.getStartDate() ) )
		eval ( $c.isValid( $q.getStartDate() ) ) 
				
	then
		int baseTariff = $q.getResult().getBaseTariff();
		baseTariff = (int)Math.round(baseTariff * $p.getValue() * $c.getValue() );
		$q.getResult().setBaseTariff( baseTariff );
end

rule "teruleti besorolas-korcsoport szorzo (termeszetes szemely)"
	agenda-group "calculate"
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU )		
		$p : Partner( genderCode != Constants.JOGI_SZEMELY )
		$a : AreaDef( postCode == $p.postCode )
		$mf: PartnerAgeModFactorDef( areaCode == $a.areaCode )
		eval ( isBetween( $mf.getAgeMin(), 
						  $mf.getAgeMax(), 
						  yearsBetween($p.getDateOfBirth(), $q.getStartDate() ) ) )
		eval ( $a.isValid( $q.getStartDate() ) )
		eval ( $mf.isValid( $q.getStartDate() ) )
				 	   				
	then
		insert(new ModFactor("AREA", $mf.getValue(), $p, "MULTIPLIER"));
end

rule "teruleti besorolas szorzo (jogi szemely)"
	agenda-group "calculate"
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU )
		$p : Partner( genderCode == Constants.JOGI_SZEMELY )
		$a : AreaDef( postCode == $p.postCode )
		$mf: LegalModFactorDef( areaCode == $a.areaCode )
		eval ( $a.isValid( $q.getStartDate() ) &&
		 	   $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("AREA", $mf.getValue(), $p, "MULTIPLIER"));
end

rule "jarmu eletkor szorzo"
	agenda-group "calculate"
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU )
		$mf: VehicleAgeModFactorDef()
		eval ( isBetween( $mf.getAgeMin(),
						  $mf.getAgeMax(),
						  yearsBetween($v.getDateOfFirstPutIntoTraffic(), $q.getStartDate() ) ) )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("VEHICLE-AGE", $mf.getValue(), $v, "MULTIPLIER"));
end

rule "vezetoi engedely szorzo"
	agenda-group "calculate"
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU )
		//Azért kell a Partnerhoz betenni ezt a feltételt, mert ha nincs itt, és a yearOfDrivingLicense = null,
		//akkor az 1. eval elszáll a new DateTime miatt.
		$p : Partner( eval( !isNullInt( yearOfDrivingLicense ) ) )
		$mf: DrivingLicenseModFactorDef()
		eval ( isBetween( $mf.getSinceMin(),
						  $mf.getSinceMax(),
						  yearsBetween(new DateTime($p.getYearOfDrivingLicense(),1,1,0,0,0,0).toDate(), $q.getStartDate() ) ) )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("DRIVING-LICENSE", $mf.getValue(), $p, "MULTIPLIER"));
end

rule "dijfizetes gyakorisaga szorzo"
	agenda-group "calculate"
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$mf: PaymentFreqModFactorDef( frequencyCode == $q.paymentFrequency )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("PAYMENT-FREQUENCY", $mf.getValue(), $q, "MULTIPLIER"));
end

rule "Bonus-Malus szorzo"
	agenda-group "calculate"
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$bm: BonusMalusModFactorDef( bonusMalus == $q.bonusMalus )
		$v : Vehicle()
		$vt: VehicleTypeDef( typeCode == $v.typeCode, bonusMalus == true )	
		eval ( $bm.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("BONUS-MALUS", $bm.getValue(), $q, "MULTIPLIER") );
end

/*****************************************************************************
				 Kedvezmények, pótdíjak számolása 
*****************************************************************************/
rule "uzemeltetesi jelleg potdij"
	agenda-group "calculate"
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v: Vehicle( operationalModality != Constants.OM_NORMAL )
		$mf: ModFactorDef( modfactorType == Constants.MF_UZEMELTETES )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("OPERATIONAL-MODALITY", $mf.getValue(), $v, "SURCHARGE"));
end

rule "casco egyuttkotes kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( takeOutWithCasco == true )
		$mf: ModFactorDef( modfactorType == Constants.MF_CASCO )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("TAKE-OUT-WITH-CASCO", $mf.getValue(), $q, "DISCOUNT"));
end

rule "banki csoportos beszedes kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( groupedCollection == true )
		$mf: ModFactorDef( modfactorType == Constants.MF_BANKI_CSOPORTOS_LEHIVAS )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("GROUPED-COLLECTION", $mf.getValue(), $q, "DISCOUNT"));
end

rule "online 8 kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( online == true && 
					eval ( isEquals(new DateTime(startDate), new DateTime(2010, 1, 1, 0, 0, 0, 0) ) ) )
		$mf: ModFactorDef( modfactorType == Constants.MF_ONLINE8 )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("ONLINE", $mf.getValue(), $q, "DISCOUNT"));
end

rule "online 4 kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( online == true && 
					eval ( firstIsAfter(new DateTime(startDate), new DateTime(2010, 1, 1, 0, 0, 0, 0) ) ) )
		$mf: ModFactorDef( modfactorType == Constants.MF_ONLINE4 )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("ONLINE", $mf.getValue(), $q, "DISCOUNT"));
end

rule "gyermek kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( childPreference == true )
		$mf: ModFactorDef( modfactorType == Constants.MF_GYERMEK )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("CHILD", $mf.getValue(), $q, "DISCOUNT"));
end

rule "mkb partner kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( mkbPartner == true )
		$mf: ModFactorDef( modfactorType == Constants.MF_MKB_PARTNER )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("MKB-PARTNER", $mf.getValue(), $q, "DISCOUNT"));
end

rule "email kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( emailGranted == true )
		$mf: ModFactorDef( modfactorType == Constants.MF_EMAIL )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("EMAIL", $mf.getValue(), $q, "DISCOUNT"));
end

rule "extra karmentessegi kedvezmeny"
	agenda-group "calculate"
	when
		$q : Quote( extraDamageExemption == true )
		$mf: ModFactorDef( modfactorType == Constants.MF_EXTRA_KARMENTESSEG )
		eval ( $mf.isValid( $q.getStartDate() ) )
				
	then
		insert(new ModFactor("EXTRA-DAMAGE-EXEMPTION", $mf.getValue(), $q, "DISCOUNT"));
end


/*****************************************************************************
							  Tarifálás 
*****************************************************************************/
rule "quote szorzok"
	agenda-group "calculate"
	salience -30
	
    when
        $q : Quote()
        $modfactors : ArrayList()
                   		from collect( ModFactor( quote == $q ) )

    then
    	for (Object mf : $modfactors){
    		$q.addModFactor((ModFactor) mf);
    	}
end

rule "jarmu szorzok"
	agenda-group "calculate"
	salience -30
	
    when
        $q : Quote()
        $v : Vehicle( quote == $q )
        $modfactors : ArrayList()
                   		from collect( ModFactor( vehicle == $v ) )

    then
    	for (Object mf : $modfactors){
    		$v.addModFactor((ModFactor) mf);
    	}
end

rule "partner szorzok"
	agenda-group "calculate"
	salience -30
	
    when
        $q : Quote()
        $p : Partner( quote == $q )
        $modfactors : ArrayList()
                   		from collect( ModFactor( partner == $p ) )

    then
    	for (Object mf : $modfactors){
    		$p.addModFactor((ModFactor) mf);
    	}
end

rule "hatarozatlan ideju kgfb eves premium szamolasa"
	agenda-group "calculate"
	salience -50
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle()
		$p : Partner()
		$param : ParamDef( key == "DOUBLE_PRECISION" )
        $quotemf : Double()
	        			from accumulate ( $mf : ModFactor( quote == $q, $val : value, discount == false, surcharge == false ),
	                          init(double m = 1.0;),
	                          action(
	                          	m *= $val;
	                          ),
	                          result(m) 
	                        )
        $partnermf : Double()
	        			from accumulate ( $mf : ModFactor( partner == $p, $val : value, discount == false, surcharge == false ),
	                          init(double m = 1.0;),
	                          action(
	                          	m *= $val;
	                          ),
	                          result(m) 
	                        )
        $vehiclemf : Double()
	        			from accumulate ( $mf : ModFactor( vehicle == $v, $val : value, discount == false, surcharge == false ),
	                          init(double m = 1.0;),
	                          action(
	                          	m *= $val;
	                          ),
	                          result(m) 
	                        )    
		$discounts : Double()
	        			from accumulate ( $mf : ModFactor( $val : value, discount == true ),
	                       	init(double m = 1.0;),
	                       	action(
	                       		m *= $val;
	                       	),
	                       	result(m) 
	                   )    
	   	$surcharges : Double()
	        			from accumulate ( $mf : ModFactor( $val : value, surcharge == true ),
	                       	init(double m = 1.0;),
	                       	action(
	                       		m *= $val;
	                       	),
	                       	result(m) 
	                   )     	 	                              	                                  	                                           					
	then
		int baseTariff = $q.getResult().getBaseTariff();
		int precision = Integer.parseInt( $param.getValue() );
		
		if ( $discounts < 0.6 ) {			
			insert( Message.create("26", String.valueOf( round( (1 - $discounts) * 100, precision ) ) ) );
			$discounts = 0.6;
		}

		double mult = round($quotemf * $partnermf * $vehiclemf * $discounts * $surcharges, precision);
		int premium = (int)Math.round(baseTariff * mult);
		int installmentPremium = (int)Math.round(premium / (double)$q.getPaymentFrequency() );
//		System.out.println("qoute: " + $quotemf); 
//		System.out.println("vehicle: " + $vehiclemf); 
//		System.out.println("partner: " + $partnermf);
//		System.out.println("discounts: " + $discounts);
//		System.out.println("surcharges: " + $surcharges); 
//		System.out.println("mult: " + mult); 
//		System.out.println(baseTariff * mult); 
//		System.out.println("premium: " + premium); 
		
		$q.getResult().setYearlyPremium( premium );
		$q.getResult().setInstallmentPremium( installmentPremium );
		
		$q.getResult().setOtherMultiplier( round($quotemf * $partnermf * $vehiclemf, precision) );
		$q.getResult().setDiscountMultiplier( round($discounts, precision) );
		$q.getResult().setSurchargeMultiplier( round($surcharges, precision) );
		$q.getResult().setTotalMultiplier( mult );
		
end

rule "hatarozott ideju kgfb teljes premium szamolasa"
	agenda-group "calculate"
	salience -50
	when
		$q : Quote( durationType == Constants.DT_HATAROZOTT )
		$v : Vehicle()
		$p : Partner()
	then
		int baseTariff = $q.getResult().getBaseTariff();
		
		//int numOfDays = daysBetween( $q.getStartDate(), $q.getEndDate() );
		//double dailyPremium = baseTariff / 30.0;
		
		//int total = (int)Math.round(dailyPremium * numOfDays);
		//$q.getResult().setTotalPremium( total );
		
		$q.getResult().setTotalPremium( baseTariff );
		
		$q.getResult().setOtherMultiplier( 1.0 );
		$q.getResult().setDiscountMultiplier( 1.0 );
		$q.getResult().setSurchargeMultiplier( 1.0 );
		$q.getResult().setTotalMultiplier( 1.0 );
		
		insert( Message.create("35") );
	
end


