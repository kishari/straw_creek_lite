package MTPLTariffRules

import hu.dbx.screek.model.facts.*;
import hu.dbx.screek.model.*;
import org.joda.time.DateTime;

function boolean isNullString(String s) {
		return ("".equals(s) || s == null);
}

function boolean isNullInt(Integer i) {
		return (i == null || i == 0);
}

function boolean firstDateIsBiggerOrEqualsThanSecondDate(DateTime q, DateTime v) {
	return ( q.isAfter(v) || q.isEqual(v) );
}

/*****************************************************************************
				 Biztosítás szintű validációk 
*****************************************************************************/
rule "validate bonusMalus (isNull)"
    agenda-group "validate"
    lock-on-active
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN,
					eval( isNullString(bonusMalus) ) )
		$v : Vehicle()
		$vt: VehicleTypeDef( typeCode == $v.typeCode, bonusMalus == true )
	then
		$q.setBonusMalus(null);
		insert( Message.create("29") );
end

rule "validate bonusMalus (not valid)"
    agenda-group "validate"
    lock-on-active
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN,
					eval( !isNullString(bonusMalus) ) )
		not(exists BonusMalusModFactorDef( bmCode == $q.bonusMalus ) )	
	then
		insert( Message.create("30", $q.getBonusMalus() ) );
end

rule "validate startDate (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( startDate == null )
				
	then
		insert( Message.create("24") );		
end

rule "validate insurance duration (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( eval( isNullInt(durationType) ) )
		
	then
		$q.setDurationType(null);
		insert( Message.create("12") );		
end

rule "validate insurance duration (not valid)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( eval( !isNullInt(durationType) ) )
		not(exists DurationTypeDef( durationType == $q.durationType ) )
		
	then
		insert( Message.create("11", $q.getDurationType().toString() ) );		
end

rule "validate payment method (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN &&  
					eval( isNullInt(paymentMethod) ) )
	then
		$q.setPaymentMethod(null);
		insert( Message.create("6") );		
end

rule "validate payment method (not valid)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN &&  
					eval( !isNullInt(paymentMethod) ) )
		not(exists PaymentMethodDef( paymentMethod == $q.paymentMethod ) )
			
	then
		insert( Message.create("5", $q.getPaymentMethod().toString() ) );		
end

rule "validate payment frequency (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN && 
					eval( isNullInt(paymentFrequency) ) )
	then
		$q.setPaymentFrequency(null);
		insert( Message.create("8") );		
end

rule "validate payment frequency (not valid)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN &&
					eval( !isNullInt(paymentFrequency) ) )
		not(exists PaymentFreqDef( frequencyCode == $q.paymentFrequency ) )
			
	then
		insert( Message.create("7", $q.getPaymentFrequency().toString() ) );
end

rule "validate payment frequency (not valid - csoportos beszedes eseten nem havi)"
    agenda-group "validate"
//    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN && 
					groupedCollection == true &&
					paymentFrequency != Constants.PF_HAVI )
			
	then
		insert( Message.create("27") );
end

rule "validate payment frequency (not valid - bizonyos jármuveknel egy osszegben kell fizetni)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN, 
					paymentFrequency != Constants.PF_EVES )
		$v : Vehicle( typeCode == Constants.TC_KONNYU_POTKOCSI ||
					  typeCode == Constants.TC_NEHEZ_POTKOCSI ||
					  typeCode == Constants.TC_SZEMELYGEPKOCSI_UTANFUTO ||
					  typeCode == Constants.TC_LAKOKOCSI ||
					  typeCode == Constants.TC_MOTORKEREKPAR_UTANFUTO ||
					  typeCode == Constants.TC_SEGEDMOTOROS_KEREKPAR )
		$vt: VehicleTypeDef( typeCode == $v.typeCode )
	then
		insert( Message.create("28", $v.getTypeCode().toString(), $vt.getDescription() ) );
end

/*****************************************************************************
				        Jármű szintű validációk 
*****************************************************************************/
rule "validate dateOfFirstPutIntoTraffic (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU &&
					  dateOfFirstPutIntoTraffic == null )
				
	then
		insert( Message.create("25") );		
end

rule "validate vehicle typecode (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$v : Vehicle( eval( isNullInt(typeCode) ) )
		
	then
		$v.setTypeCode(null);
		insert( Message.create("4") );		
end

rule "validate vehicle typecode (not valid)"
    agenda-group "validate"
    lock-on-active    
	when
		$v : Vehicle( eval( !isNullInt(typeCode) ) )
		not(exists VehicleTypeDef( typeCode == $v.typeCode ) )
		
	then
		insert( Message.create("3", $v.getTypeCode().toString() ) );		
end

rule "validate vehicle typecode (not valid - sima potkocsi, proba rendszam nincs hatarozatlan esetben)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_PROBA_RENDSZAM ||
					  typeCode == Constants.TC_POTKOCSI )
		$vt: VehicleTypeDef( typeCode == $v.typeCode )
	then
		insert( Message.create("31", $v.getTypeCode().toString(), $vt.getDescription() ) );		
end

rule "validate vehicle typecode (not valid - segedmotoros kerekpar, trolibusz nincs hatarozott esetben)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZOTT )
		$v : Vehicle( typeCode == Constants.TC_SEGEDMOTOROS_KEREKPAR ||
					  typeCode == Constants.TC_TROLIBUSZ )
		$vt: VehicleTypeDef( typeCode == $v.typeCode )
	then
		insert( Message.create("32", $v.getTypeCode().toString(), $vt.getDescription() ) );		
end

rule "validate vehicle make (not valid)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU && 
					  eval ( !isNullString(make) ) )
		not(exists MakeDef( make == $v.make ) )
		
	then
		insert( Message.create("9", $v.getMake() ) );		
end

rule "validate vehicle make (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU && 
					  eval( isNullString(make) ))
		
	then
		insert( Message.create("10") );		
end

rule "validate operationalModality (not valid)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( eval( !isNullInt(operationalModality) ) )
		not(exists OperationalModalityDef( operationalModality == $v.operationalModality ) )
			
	then
		insert( Message.create("16", $v.getOperationalModality().toString() ) );
end

rule "validate operationalModality (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( eval( isNullInt(operationalModality) ) )
			
	then
		$v.setOperationalModality(null);
		insert( Message.create("17") );
end

rule "validate power (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU && 
					  eval( isNullInt(maximumNettoPower) ) )
			
	then
		$v.setMaximumNettoPower(null);
		insert( Message.create("18") );
end

rule "validate cubicCapacity (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( (typeCode == Constants.TC_SZEMELYGEPJARMU || typeCode == Constants.TC_MOTORKEREKPAR) &&  
					  eval( isNullInt(cubicCapacity) ) )
			
	then
		$v.setCubicCapacity(null);
		insert( Message.create("19") );
end

rule "validate seatingCapacity (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_AUTOBUSZ && 
					  eval( isNullInt(seatingCapacity) ) )
			
	then
		$v.setSeatingCapacity(null);
		insert( Message.create("20") );
end

rule "validate carryingCapacity (isNull)"
    agenda-group "validate"
    lock-on-active
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_TEHERGEPJARMU && 
					  eval( isNullInt(carryingCapacity) ) )
			
	then
		$v.setCarryingCapacity(null);
		insert( Message.create("21") );
end

/*****************************************************************************
				        Partner szintű validációk 
*****************************************************************************/
rule "validate dateOfBirth (isNull)"
    agenda-group "validate"
    lock-on-active    
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU || typeCode == Constants.TC_TEHERGEPJARMU )
		$p : Partner( dateOfBirth == null )
				
	then
		insert( Message.create("23") );		
end

rule "validate postcode (isNull)"
    agenda-group "validate"    
    lock-on-active
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU )
		$p : Partner( eval( isNullInt(postCode) ) )
				
	then
		$p.setPostCode(null);
		insert( Message.create("2") );		
end

rule "validate postcode (not valid)"
    agenda-group "validate"  
    lock-on-active      
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU )
		$p : Partner( eval( !isNullInt(postCode) ) )
		not(exists AreaDef( postCode == $p.postCode ) )
		
	then
		insert( Message.create("1", $p.getPostCode().toString() ) );		
end

rule "validate genderCode (isNull)"
    agenda-group "validate"
    lock-on-active   
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU || typeCode == Constants.TC_TEHERGEPJARMU )
		$p : Partner( eval( isNullInt( genderCode ) ) )
	then
		insert( Message.create("14") );		
end

rule "validate genderCode (not valid)"
    agenda-group "validate"
    lock-on-active        
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU || typeCode == Constants.TC_TEHERGEPJARMU )
		$p : Partner( eval( !isNullInt( genderCode ) ) )
		not(exists GenderDef( genderCode == $p.genderCode ) )
			
	then
		insert( Message.create("13", $p.getGenderCode().toString() ) );
end

rule "validate yearOfDrivingLicense (isNull)"
    agenda-group "validate"
    lock-on-active
	when
		$q : Quote( durationType == Constants.DT_HATAROZATLAN )
		$v : Vehicle( typeCode == Constants.TC_SZEMELYGEPJARMU )
		$p : Partner( eval( isNullInt(yearOfDrivingLicense) ) )
			
	then
		$p.setYearOfDrivingLicense(null);
		insert( Message.create("22") );
end



/*****************************************************************************
				        		Egyéb
*****************************************************************************/
rule "setting groupedCollection flag"
    agenda-group "validate"
    lock-on-active
	when
		$p : PaymentMethodDef( paymentMethod == Constants.PM_BANKI_CSOPORTOS_BESZEDES )
		$q : Quote( paymentMethod == $p.paymentMethod )
		
	then
		modify( $q ) { setGroupedCollection( true ) };		
end

rule "validate szemelygepjarmu discounts (startDate >= 2010 jan 1 and insuranceDuration = HATAROZATLAN)"
    agenda-group "validate"
    salience -10
    lock-on-active
	when
		$q : Quote( takeOutWithCasco == true ||
					childPreference == true ||
					mkbPartner == true ||
					online == true ||
					emailGranted == true ||
					extraDamageExemption == true ||
					groupedCollection == true )
		$v : Vehicle()
		$d : DurationTypeDef( durationType == Constants.DT_HATAROZATLAN )
		$vt: VehicleTypeDef( typeCode == Constants.TC_SZEMELYGEPJARMU )
		//ha ez a not exists feltétel nem lenne itt, akkor az eval elszállna a startDate = null esetén! (code = 24)
		//hasonlóan a durationType-ra és a typeCode-ra is! (3,4,11,12 code)
		not (exists (Message( code == "3" || code == "4" || code == "11" || code == "12" || code == "24") ) )
		eval ( !firstDateIsBiggerOrEqualsThanSecondDate(new DateTime($q.getStartDate()), new DateTime(2010, 1, 1, 0, 0, 0, 0) ) 
			  || (!$d.getDurationType().equals( $q.getDurationType() ) ) 
			  || (!$vt.getTypeCode().equals($v.getTypeCode()) ) )
		
	then
		insert( Message.create("15", "2009-12-31" ) );
		modify ( $q ) {	
			setTakeOutWithCasco(false),
			setChildPreference(false),
			setMkbPartner(false),
			setOnline(false),
			setEmailGranted(false),
			setExtraDamageExemption(false),
			setGroupedCollection(false)	
		}
end