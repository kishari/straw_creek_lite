package MTPLTariffRules

import hu.dbx.screek.model.facts.*;
import hu.dbx.screek.model.*;
import org.joda.time.DateTime;

function boolean isNull(String s) {
	return ("".equals(s) || s == null);
}

function boolean firstDateIsBiggerOrEqualsThanSecondDate(DateTime q, DateTime v) {
	return ( q.isAfter(v) || q.isEqual(v) );
}

rule "validate startDate (isNull)"
    agenda-group "validate"
	when
		$q : Quote( startDate == null )
				
	then
		insert( Message.create("24") );		
end

rule "validate dateOfFirstPutIntoTraffic (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "SZEMELYGEPJARMU" && dateOfFirstPutIntoTraffic == null )
				
	then
		insert( Message.create("25") );		
end

rule "validate dateOfBirth (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "SZEMELYGEPJARMU" || typeCode == "TEHERGEPJARMU" )
		$p : Partner( dateOfBirth == null )
				
	then
		insert( Message.create("23") );		
end

rule "validate postcode (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "SZEMELYGEPJARMU" )
		$p : Partner( postCode == null )
				
	then
		$p.setPostCode(null);
		insert( Message.create("2") );		
end

rule "validate postcode (not valid)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "SZEMELYGEPJARMU" )
		$p : Partner( postCode != null )
		not(exists AreaDef( postCode == $p.postCode ) )
		
	then
		insert( Message.create("1", $p.getPostCode().toString() ) );		
end


rule "validate vehicle typecode (isNull)"
    agenda-group "validate"
	when
		$v : Vehicle( eval ( isNull(typeCode) ) )
		
	then
		insert( Message.create("4") );		
end


rule "validate vehicle typecode (not valid)"
    agenda-group "validate"
	when
		$v : Vehicle( eval ( !isNull(typeCode) ) )
		not(exists VehicleTypeDef( typeCode == $v.typeCode ) )
		
	then
		insert( Message.create("3", $v.getTypeCode() ) );		
end


rule "validate vehicle make (not valid)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "SZEMELYGEPJARMU"  && eval ( !isNull(make) ) )
		not(exists MakeDef( make == $v.make ) )
		
	then
		insert( Message.create("9", $v.getMake() ) );		
end

rule "validate vehicle make (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "SZEMELYGEPJARMU" && eval( isNull(make) ))
		
	then
		insert( Message.create("10") );		
end


rule "validate insurance duration (isNull)"
    agenda-group "validate"
	when
		$q : Quote( eval ( isNull( durationType ) ) )
		
	then
		insert( Message.create("12") );		
end

rule "validate insurance duration (not valid)"
    agenda-group "validate"
	when
		$q : Quote( eval ( !isNull( durationType ) ) )
		not(exists DurationDef( durationType == $q.durationType ) )
		
	then
		insert( Message.create("11", $q.getDurationType() ) );		
end

rule "validate payment method (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" && eval( isNull( paymentMethod ) ) )
	then
		insert( Message.create("6") );		
end

rule "validate payment method (not valid)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" &&  eval( !isNull( paymentMethod ) ) )
		not(exists PaymentMethodDef( paymentMethod == $q.paymentMethod ) )
			
	then
		insert( Message.create("5", $q.getPaymentMethod() ) );		
end

rule "validate payment frequency (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" && eval( isNull( paymentFrequency ) ) )
	then
		insert( Message.create("8") );		
end

rule "validate payment frequency (not valid)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" && eval( !isNull( paymentFrequency ) ) )
		not(exists PaymentFreqDef( frequencyCode == $q.paymentFrequency ) )
			
	then
		insert( Message.create("7", $q.getPaymentFrequency() ) );
end

rule "validate genderCode (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "SZEMELYGEPJARMU" || typeCode == "TEHERGEPJARMU" )
		$p : Partner( eval( isNull( genderCode ) ) )
	then
		insert( Message.create("14") );		
end

rule "validate genderCode (not valid)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "SZEMELYGEPJARMU" || typeCode == "TEHERGEPJARMU" )
		$p : Partner( eval( !isNull( genderCode ) ) )
		not(exists GenderDef( genderCode == $p.genderCode ) )
			
	then
		insert( Message.create("13", $p.getGenderCode() ) );
end

rule "validate operationalModality (not valid)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( eval( !isNull( operationalModality ) ) )
		not(exists OperationalModalityDef( operationalModality == $v.operationalModality ) )
			
	then
		insert( Message.create("16", $v.getOperationalModality() ) );
end

rule "validate operationalModality (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( eval( isNull( operationalModality ) ) )
			
	then
		insert( Message.create("17") );
end

rule "validate power (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "SZEMELYGEPJARMU" && 
					  (maximumNettoPower == null || maximumNettoPower == 0) )
			
	then
		$v.setMaximumNettoPower(null);
		insert( Message.create("18") );
end

rule "validate cubicCapacity (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( (typeCode == "SZEMELYGEPJARMU" || typeCode == "MOTORKEREKPAR") &&  
					  (cubicCapacity == null || cubicCapacity == 0 ) )
			
	then
		$v.setCubicCapacity(null);
		insert( Message.create("19") );
end

rule "validate seatingCapacity (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "AUTOBUSZ" && 
					  (seatingCapacity == null || seatingCapacity == 0) )
			
	then
		$v.setSeatingCapacity(null);
		insert( Message.create("20") );
end

rule "validate carryingCapacity (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "TEHERGEPJARMU" && 
					  (carryingCapacity == null || carryingCapacity == 0) )
			
	then
		$v.setCarryingCapacity(null);
		insert( Message.create("21") );
end

rule "validate yearOfDrivingLicense (isNull)"
    agenda-group "validate"
	when
		$q : Quote( durationType == "HATAROZATLAN" )
		$v : Vehicle( typeCode == "SZEMELYGEPJARMU" )
		$p : Partner( yearOfDrivingLicense == null || yearOfDrivingLicense == 0 )
			
	then
		$p.setYearOfDrivingLicense(null);
		insert( Message.create("22") );
end

rule "setting groupedCollection flag"
    agenda-group "validate"
    no-loop
	when
		$p : PaymentMethodDef( paymentMethod == "BANKI_CSOPORTOS_BESZEDES")
		$q : Quote( paymentMethod == $p.paymentMethod )
		
	then
		modify( $q ) { setGroupedCollection( true ) };		
end

rule "validate SZEMELYGEPJARMU discounts (startDate >= 2010 jan 1 and insuranceDuration = HATAROZATLAN)"
    agenda-group "validate"
    salience -10
	when
		$q : Quote( takeOutWithCasco == true ||
					childPreference == true ||
					mkbPartner == true ||
					online == true ||
					emailGranted == true ||
					extraDamageExemption == true ||
					groupedCollection == true )
		$v : Vehicle()
		$d : DurationDef( durationType == "HATAROZATLAN" )
		$vt: VehicleTypeDef( typeCode == "SZEMELYGEPJARMU" )
		//ha ez a not exists feltétel nem lenne itt, akkor az eval elszállna a startDate = null esetén! (code = 24)
		//hasonlóan a durationType-ra és a typeCode-ra is! (3,4,11,12 code)
		not (exists (Message( code == "3" || code == "4" || code == "11" || code == "12" || code == "24") ) )
		eval ( !firstDateIsBiggerOrEqualsThanSecondDate(new DateTime($q.getStartDate()), new DateTime(2010, 1, 1, 0, 0, 0, 0) ) 
			  || (!$d.getDurationType().equals( $q.getDurationType() ) ) 
			  || (!$vt.getTypeCode().equals($v.getTypeCode()) ) )
		
	then
		insert( Message.create("15", "2009-12-31" ) );
		$q.setTakeOutWithCasco(false);
		$q.setChildPreference(false);
		$q.setMkbPartner(false);
		$q.setOnline(false);
		$q.setEmailGranted(false);
		$q.setExtraDamageExemption(false);
		$q.setGroupedCollection(false);
		
end